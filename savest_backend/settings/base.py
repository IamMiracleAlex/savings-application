"""
Django settings for savest_backend project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
from decouple import config
import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('SECRET_KEY')

ADMINS = [('ose', 'ose@savests.com'),('miracle', 'miracle@savests.com')]

MANAGERS = [('ose', 'ose@savests.com'),('miracle', 'miracle@savests.com')]

# Application definition

INSTALLED_APPS = [ 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_crontab',
    'rest_framework',
    'rest_framework.authtoken',
    'users',
    'accounts',
    'deposits',
    'withdraws',
    'transfers',
    'subscriptions',
    'safelocks',
    'kyc_profiles',
    'web',
    'payments',
    'push_notifications',
    'metrics',
    'transactions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'savest_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'users.context_processors.admin_header_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'savest_backend.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lagos'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'users.CustomUser'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', ),

    'EXCEPTION_HANDLER': 'utils.api_response.custom_exception_handler'
}

CELERY_BROKER_URL = 'amqp://localhost'

CRONJOBS = [
    ('*/15 8 * * *', 'services.cron.debit_subscriptions'),
    ('0 22 * * *', 'services.cron.credit_interests'),
    ('0 1 * * *', 'services.cron.open_safelocks'),
    ('0 1 * * *', 'services.cron.daily_metrics'),
    ('0 1 1 * *', 'services.cron.monthly_interest_run')
]


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.sendgrid.net'
# EMAIL_PORT = 587
# EMAIL_HOST_USER = config('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = 'SaVests Team <noreply@savests.com>'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'support@savests.com'
EMAIL_HOST_PASSWORD = 'SaVestsSupport123'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'SaVests Team'


OLD_PASSWORD_FIELD_ENABLED = True

PUSH_NOTIFICATIONS_SETTINGS = {
    "FCM_API_KEY": "AAAAH4bIewQ:APA91bETiH3Jw5hAv9CaGf-s92qxQ3WsqHDZ8JMH7tjGFoFdAefWfFH5M4oOTmA8cbiBoiRyfxs1re9IRk-_k9ZgT4Zsb9CQ2ngMkXjz7pA1KlLqontExyqyrVA62X8EGwIOzm6ean6D",
    "UNIQUE_REG_ID": True,
    "UPDATE_ON_DUPLICATE_REG_ID": True,
    "APNS_CERTIFICATE": os.path.join(BASE_DIR, "aps.pem"),
    "APNS_TOPIC": "com.savests.savests",
}



# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
#             'style': '{',
#         },
#         'simple': {
#             'format': '{levelname} {message}',
#             'style': '{',
#         },
#     },
#     'filters': {
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         },
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'INFO',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple',
#         },
#         'null': {
#             'class': 'logging.NullHandler',
#         },
#         'mail_admins': {
#             'level': 'ERROR',
#             'filters': ['require_debug_false'],
#             'class': 'django.utils.log.AdminEmailHandler',
#             'formatter': 'verbose',
#         },
#         'file': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'formatter': 'verbose',
#             'filename': '/home/ose/savest/logs/debug.log' # Provide custom server file path 
#         }
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console'],
#         },
#         'django.request': {
#             'handlers': ['mail_admins','file'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.security': {
#             'handlers': ['mail_admins','file'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'py.warnings': {
#             'handlers': ['console', 'mail_admins' ],
#         },
#     }
# }
